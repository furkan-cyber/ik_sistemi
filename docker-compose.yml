version: '3.8' 
 
services: 
  web: 
    build: . 
    volumes: 
      - .:/app 
      - static_volume:/app/staticfiles 
      - media_volume:/app/media 
    ports: 
      - \"8000:8000\" 
    environment: 
      - DEBUG=${DEBUG} 
      - SECRET_KEY=${SECRET_KEY} 
      - DB_NAME=${DB_NAME} 
      - DB_USER=${DB_USER} 
      - DB_PASSWORD=${DB_PASSWORD} 
      - DB_HOST=${DB_HOST} 
      - DB_PORT=${DB_PORT} 
      - REDIS_URL=${REDIS_URL} 
    env_file: 
      - .env 
    depends_on: 
      - db 
      - redis 
    restart: unless-stopped 
 
  db: 
    image: postgres:13 
    volumes: 
      - postgres_data:/var/lib/postgresql/data 
    environment: 
      - POSTGRES_DB=${DB_NAME} 
      - POSTGRES_USER=${DB_USER} 
      - POSTGRES_PASSWORD=${DB_PASSWORD} 
    ports: 
      - \"5432:5432\" 
    restart: unless-stopped 
 
  redis: 
    image: redis:6-alpine 
    ports: 
      - \"6379:6379\" 
    restart: unless-stopped 
 
  celery: 
    build: . 
    command: celery -A ik_sistemi worker -l info 
    volumes: 
      - .:/app 
      - static_volume:/app/staticfiles 
      - media_volume:/app/media 
    environment: 
      - DEBUG=${DEBUG} 
      - SECRET_KEY=${SECRET_KEY} 
      - DB_NAME=${DB_NAME} 
      - DB_USER=${DB_USER} 
      - DB_PASSWORD=${DB_PASSWORD} 
      - DB_HOST=${DB_HOST} 
      - DB_PORT=${DB_PORT} 
      - CELERY_BROKER_URL=${CELERY_BROKER_URL} 
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND} 
    env_file: 
      - .env 
    depends_on: 
      - db 
      - redis 
    restart: unless-stopped 
 
  celery-beat: 
    build: . 
    command: celery -A ik_sistemi beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler 
    volumes: 
      - .:/app 
      - static_volume:/app/staticfiles 
      - media_volume:/app/media 
    environment: 
      - DEBUG=${DEBUG} 
      - SECRET_KEY=${SECRET_KEY} 
      - DB_NAME=${DB_NAME} 
      - DB_USER=${DB_USER} 
      - DB_PASSWORD=${DB_PASSWORD} 
      - DB_HOST=${DB_HOST} 
      - DB_PORT=${DB_PORT} 
      - CELERY_BROKER_URL=${CELERY_BROKER_URL} 
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND} 
    env_file: 
      - .env 
    depends_on: 
      - db 
      - redis 
    restart: unless-stopped 
 
  nginx: 
    image: nginx:1.21-alpine 
    ports: 
      - \"80:80\" 
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf 
      - static_volume:/app/staticfiles 
      - media_volume:/app/media 
    depends_on: 
      - web 
    restart: unless-stopped 
 
volumes: 
  postgres_data: 
  static_volume: 
  media_volume: 
